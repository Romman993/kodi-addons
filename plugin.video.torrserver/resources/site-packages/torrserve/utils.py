# -*- coding: utf-8 -*-
import xbmc
import xbmcgui
from collections import OrderedDict
from torrserve.config import ADDON_NAME, ADDON_ICON, ADDON

resolutions = OrderedDict()
resolutions['[COLOR=FFFC3401]240p[/COLOR]'] = ['240p', u'240р']
resolutions['[COLOR=FFA56F01]480p[/COLOR]'] = ['480p', u'480р', 'XviD', 'SATRip']
resolutions['[COLOR=FF539A02]720p[/COLOR]'] = ['720p', u'720р', '720i']
resolutions['[COLOR=FF0166FC]1080p[/COLOR]'] = ['1080p', u'1080р', '1080i']
resolutions['[COLOR=FFF15052]2K[/COLOR]'] = ['2K', '1440p', u'1440р']
resolutions['[COLOR=FF6BB9EC]4K[/COLOR]'] = ['4K', '2160p', u'2160р']

def humanizeSize(size):
    B = u"б"
    KB = u"Кб"
    MB = u"Мб"
    GB = u"Гб"
    TB = u"Тб"
    UNITS = [B, KB, MB, GB, TB]
    HUMANFMT = "%.2f %s"
    HUMANRADIX = 1024.

    for u in UNITS[:-1]:
        if size < HUMANRADIX : return HUMANFMT % (size, u)
        size /= HUMANRADIX

    return HUMANFMT % (size,  UNITS[-1])


def notify(message, header=ADDON_NAME, time=5000, image=ADDON_ICON):
    dialog = xbmcgui.Dialog()
    return dialog.notification(toUtf8(header), toUtf8(message), toUtf8(image), time, False)


def toUtf8(string):
    if isinstance(string, unicode):
        return string.encode('utf-8', 'ignore')
    return string


def settingsIsOpen():
    return xbmc.getCondVisibility('Window.IsVisible(10140)') or xbmc.getCondVisibility('Window.IsActive(10140)') or xbmc.getCondVisibility('Window.IsVisible(12002)')


def parseName(torrentName):
    for k, values in resolutions.items():
        for v in values:
            torrentName = torrentName.replace(v, k)
    return torrentName
